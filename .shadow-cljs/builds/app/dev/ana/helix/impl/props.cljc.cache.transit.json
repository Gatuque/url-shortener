["^ ","~:output",["^ ","~:js","goog.provide('helix.impl.props');\ngoog.scope(function(){\n  helix.impl.props.goog$module$goog$object = goog.module.get('goog.object');\n});\nhelix.impl.props.aria_data_css_custom_prop_special_case_re = /^(aria-|data-|--).*/;\nhelix.impl.props.camel_regexp = RegExp(\"-(\\\\w)\",\"g\");\n/**\n * Returns camel case version of the string, e.g. \"http-equiv\" becomes \"httpEquiv\".\n */\nhelix.impl.props.camel_case = (function helix$impl$props$camel_case(s){\nif((((s instanceof cljs.core.Keyword)) || (((typeof s === 'string') || ((s instanceof cljs.core.Symbol)))))){\nvar name_str = cljs.core.name(s);\nif((!((name_str.match(helix.impl.props.aria_data_css_custom_prop_special_case_re) == null)))){\nreturn name_str;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(name_str.substring((0),(1)),\"'\")){\nreturn name_str.substring((1));\n} else {\nreturn name_str.replace(helix.impl.props.camel_regexp,(function (p1__34814_SHARP_,p2__34813_SHARP_){\nreturn p2__34813_SHARP_.toUpperCase();\n}));\n\n}\n}\n} else {\nreturn s;\n}\n});\nhelix.impl.props.kw__GT_str = (function helix$impl$props$kw__GT_str(kw){\nvar kw_ns = cljs.core.namespace(kw);\nvar kw_name = cljs.core.name(kw);\nif((kw_ns == null)){\nreturn kw_name;\n} else {\nreturn [kw_ns,\"/\",kw_name].join('');\n}\n});\nhelix.impl.props.set_obj = (function helix$impl$props$set_obj(o,k,v){\nvar G__34816 = o;\nhelix.impl.props.goog$module$goog$object.set(G__34816,k,v);\n\nreturn G__34816;\n});\nhelix.impl.props.__GT_js = (function helix$impl$props$__GT_js(x){\nreturn cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"keyword-fn\",\"keyword-fn\",-64566675),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(helix.impl.props.camel_case,cljs.core.name)], 0));\n});\nhelix.impl.props.primitive_obj = (function helix$impl$props$primitive_obj(var_args){\nvar G__34819 = arguments.length;\nswitch (G__34819) {\ncase 0:\nreturn helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn ({});\n}));\n\n(helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$1 = (function (m){\nreturn helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$2(m,helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$0());\n}));\n\n(helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$2 = (function (m,o){\nwhile(true){\nif(cljs.core.seq(m)){\nvar G__34837 = cljs.core.rest(m);\nvar G__34838 = (function (){var entry = cljs.core.first(m);\nreturn helix.impl.props.set_obj(o,helix.impl.props.camel_case(helix.impl.props.kw__GT_str(cljs.core.key(entry))),helix.impl.props.__GT_js(cljs.core.val(entry)));\n})();\nm = G__34837;\no = G__34838;\ncontinue;\n} else {\nreturn o;\n}\nbreak;\n}\n}));\n\n(helix.impl.props.primitive_obj.cljs$lang$maxFixedArity = 2);\n\nhelix.impl.props.into_js_array = (function helix$impl$props$into_js_array(aseq){\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(aseq);\n});\nhelix.impl.props.merge_obj = (function helix$impl$props$merge_obj(o1,o2){\nreturn Object.assign(o1,o2);\n});\nhelix.impl.props.seq_to_class = (function helix$impl$props$seq_to_class(class$){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,class$)));\n});\nhelix.impl.props.normalize_class = (function helix$impl$props$normalize_class(class$){\nif(typeof class$ === 'string'){\nreturn class$;\n} else {\nif(cljs.core.sequential_QMARK_(class$)){\nreturn helix.impl.props.seq_to_class(class$);\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(class$);\n\n}\n}\n});\nhelix.impl.props.or_undefined = (function helix$impl$props$or_undefined(v){\nif((v == null)){\nreturn undefined;\n} else {\nreturn v;\n}\n});\nhelix.impl.props.dom_style = (function helix$impl$props$dom_style(style){\nif(cljs.core.map_QMARK_(style)){\nreturn helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$1(style);\n} else {\nif(cljs.core.vector_QMARK_(style)){\nreturn helix.impl.props.into_js_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__34822_SHARP_){\nif(cljs.core.map_QMARK_(p1__34822_SHARP_)){\nreturn helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$1(p1__34822_SHARP_);\n} else {\nreturn p1__34822_SHARP_;\n}\n}),style));\n} else {\nreturn style;\n\n}\n}\n});\nhelix.impl.props._dom_props = (function helix$impl$props$_dom_props(var_args){\nvar G__34826 = arguments.length;\nswitch (G__34826) {\ncase 1:\nreturn helix.impl.props._dom_props.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn helix.impl.props._dom_props.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.impl.props._dom_props.cljs$core$IFn$_invoke$arity$1 = (function (m){\nif(cljs.core.map_QMARK_(m)){\nreturn helix.impl.props._dom_props.cljs$core$IFn$_invoke$arity$2(m,helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$0());\n} else {\nreturn m;\n}\n}));\n\n(helix.impl.props._dom_props.cljs$core$IFn$_invoke$arity$2 = (function (m,o){\nwhile(true){\nif(cljs.core.seq(m)){\nvar G__34843 = cljs.core.rest(m);\nvar G__34844 = (function (){var entry = cljs.core.first(m);\nvar k = cljs.core.key(entry);\nvar v = cljs.core.val(entry);\nvar G__34831 = k;\nvar G__34831__$1 = (((G__34831 instanceof cljs.core.Keyword))?G__34831.fqn:null);\nswitch (G__34831__$1) {\ncase \"class\":\nreturn helix.impl.props.set_obj(o,\"className\",helix.impl.props.normalize_class(v));\n\nbreak;\ncase \"for\":\nreturn helix.impl.props.set_obj(o,\"htmlFor\",v);\n\nbreak;\ncase \"style\":\nreturn helix.impl.props.set_obj(o,\"style\",helix.impl.props.dom_style(v));\n\nbreak;\ncase \"value\":\nreturn helix.impl.props.set_obj(o,\"value\",helix.impl.props.or_undefined(v));\n\nbreak;\ndefault:\nreturn helix.impl.props.set_obj(o,helix.impl.props.camel_case(helix.impl.props.kw__GT_str(k)),v);\n\n}\n})();\nm = G__34843;\no = G__34844;\ncontinue;\n} else {\nreturn o;\n}\nbreak;\n}\n}));\n\n(helix.impl.props._dom_props.cljs$lang$maxFixedArity = 2);\n\nhelix.impl.props._props = (function helix$impl$props$_props(var_args){\nvar G__34833 = arguments.length;\nswitch (G__34833) {\ncase 1:\nreturn helix.impl.props._props.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn helix.impl.props._props.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.impl.props._props.cljs$core$IFn$_invoke$arity$1 = (function (m){\nif(cljs.core.map_QMARK_(m)){\nreturn helix.impl.props._props.cljs$core$IFn$_invoke$arity$2(m,helix.impl.props.primitive_obj.cljs$core$IFn$_invoke$arity$0());\n} else {\nreturn m;\n}\n}));\n\n(helix.impl.props._props.cljs$core$IFn$_invoke$arity$2 = (function (m,o){\nwhile(true){\nif(cljs.core.seq(m)){\nvar G__34847 = cljs.core.rest(m);\nvar G__34848 = (function (){var entry = cljs.core.first(m);\nreturn helix.impl.props.set_obj(o,helix.impl.props.kw__GT_str(cljs.core.key(entry)),cljs.core.val(entry));\n})();\nm = G__34847;\no = G__34848;\ncontinue;\n} else {\nreturn o;\n}\nbreak;\n}\n}));\n\n(helix.impl.props._props.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","helix/impl/props.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",21],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$props",["^ ","~:arglists",["~#list",[["~$m"]]],"^7",195,"^8",1,"^6","helix/impl/props.cljc","~:name","~$helix.impl.props/props","~:ns","~$helix.impl.props","~:macro",true],"~$dom-props",["^ ","^G",["^H",[["~$m"]]],"^7",169,"^8",1,"^6","helix/impl/props.cljc","^I","~$helix.impl.props/dom-props","^K","^L","^M",true]],"^I","^L","~:reader-aliases",["^ "],"~:op","^K","~:imports",null,"~:requires",["^ ","~$clojure.string","^T","~$string","^T","~$cljs-bean.core","^V","~$b","^V","~$goog.object","^W","~$gobj","^W","~$cljs.core","^Y","~$goog","^Z"],"~:seen",["^D",["~:require","~:require-macros"]],"~:uses",null,"^11",["^ ","^L","^L","^Y","^Y"],"~:form",["^H",["~$ns","^L",["^H",["^10",["^T","~:as","^U"],["^V","^15","~$b"],["^W","^15","^X"]]],["^H",["^11",["^L"]]]]],"~:flags",["^ ","^10",["^D",[]],"^11",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^Z","^Y","^T","^V","^W"]],"^K","^L","~:resource-id",["~:shadow.build.classpath/resource","helix/impl/props.cljc"],"~:compiled-at",1695155839652,"^P",["^ ","^V","^V","^Y","^Y","^X","^W","^Z","^Z","^W","^W","^L","^L","^U","^T","^T","^T","~$b","^V"],"~:resource-name","helix/impl/props.cljc","~:warnings",[],"~:source","(ns helix.impl.props\n  (:require [clojure.string :as string]\n            #?@(:cljs [[cljs-bean.core :as b]\n                       [goog.object :as gobj]]))\n  #?(:cljs (:require-macros [helix.impl.props])))\n\n(def aria-data-css-custom-prop-special-case-re #\"^(aria-|data-|--).*\")\n\n#?(:cljs (def camel-regexp (js/RegExp \"-(\\\\w)\", \"g\")))\n\n(defn camel-case\n  \"Returns camel case version of the string, e.g. \\\"http-equiv\\\" becomes \\\"httpEquiv\\\".\"\n  [s]\n  (if (or (keyword? s)\n          (string? s)\n          (symbol? s))\n    (let [name-str (name s)]\n      ; this is hot path so we want to use low-level interop\n      #?(:clj  (cond\n                 (some? (re-matches aria-data-css-custom-prop-special-case-re name-str)) name-str\n                 (= (subs name-str 0 1) \"'\") (subs name-str 1)\n                 :else (string/replace name-str #\"-(\\w)\" #(string/upper-case (second %))))\n         :cljs (cond\n                 (some? (.match name-str aria-data-css-custom-prop-special-case-re)) name-str\n                 (= (.substring name-str 0 1) \"'\") (.substring name-str 1)\n                 :else (.replace name-str camel-regexp #(.toUpperCase %2)))))\n    s))\n\n(comment\n  (camel-case \"get-asdf-aw9e8f\"))\n\n(defn kw->str [kw]\n  (let [kw-ns (namespace kw)\n        kw-name (name kw)]\n    (if (nil? kw-ns)\n      kw-name\n      (str kw-ns \"/\" kw-name))))\n\n\n(defn set-obj [o k v]\n  #?(:clj (conj o k v)\n     :cljs (doto o (gobj/set k v))))\n\n#?(:cljs (defn ->js [x]\n           (clj->js x :keyword-fn (comp camel-case name))))\n\n(defn primitive-obj\n  ([] #?(:clj '[cljs.core/js-obj]\n         :cljs #js {}))\n  ([m]\n   #?(:clj (if (map? m)\n             (primitive-obj m (primitive-obj))\n             ;; fall back to runtime\n             `(primitive-obj ~m))\n      :cljs (primitive-obj m (primitive-obj))))\n  ([m o]\n   (if (seq m)\n     (recur (rest m)\n            (let [entry (first m)]\n              (set-obj o\n                       (camel-case (kw->str (key entry)))\n                       #?(:clj `(->js ~(val entry))\n                          :cljs (->js (val entry))))))\n     #?(:clj (list* o)\n        :cljs o))))\n\n(defn into-js-array [aseq]\n  #?(:clj (list* (into '[cljs.core/array] aseq))\n     :cljs (into-array aseq)))\n\n#?(:cljs\n   (defn merge-obj [o1 o2]\n     (js/Object.assign o1 o2)))\n\n(defn seq-to-class [class]\n  (->> class\n       (remove nil?)\n       (map str)\n       (string/join \" \")))\n\n#?(:clj\n   (defn unquote-class\n     \"Handle the case of (quote '[foo bar])\"\n     [class]\n     (if (sequential? class)\n       (seq-to-class class)\n       (str class))))\n\n#?(:clj\n   (defn normalize-class [class]\n     (cond\n       (string? class)\n       class\n\n       (and (list? class)\n            (= (first class) 'quote))\n       (unquote-class (second class))\n\n       :default\n       `(normalize-class ~class))))\n\n#?(:cljs\n   (defn normalize-class [class]\n     (cond\n       ;; quick path\n       (string? class) class\n\n       (sequential? class) (seq-to-class class)\n\n       ;; not a string or sequential, stringify it\n       true (str class))))\n\n\n#?(:cljs\n   (defn or-undefined\n     [v]\n     (if (nil? v)\n       js/undefined\n       v)))\n\n\n(defn dom-style\n  [style]\n  (cond\n    ;; when map, convert to an object w/ camel casing\n    (map? style) (primitive-obj style)\n    ;; React Native allows arrays of styles\n    (vector? style) (into-js-array (map #(if (map? %) (primitive-obj %) %) style))\n    ;; if anything else, at compile time fall back to runtime\n    ;; at runtime just pass it through and assume it's a JS style obj!\n    true #?(:clj `(dom-style ~style)\n            :cljs style)))\n\n\n(defn -dom-props\n  ([m] #?(:clj (if-let [spread-sym (cond\n                                     (contains? m '&) '&\n                                     (contains? m :&) :&)]\n                 `(merge-obj ~(-dom-props (dissoc m spread-sym) (primitive-obj))\n                             (-dom-props ~(get m spread-sym)))\n                 (-dom-props m (primitive-obj)))\n          :cljs (if (map? m)\n                  (-dom-props m (primitive-obj))\n                  ;; assume JS obj\n                  m)))\n  ([m o]\n   (if (seq m)\n     (recur (rest m)\n            (let [entry (first m)\n                  k (key entry)\n                  v (val entry)]\n              (case k\n                :class (set-obj o \"className\" (normalize-class v))\n                :for (set-obj o \"htmlFor\" v)\n                :style (set-obj o \"style\" (dom-style v))\n                :value (set-obj o \"value\" #?(:clj `(or-undefined ~v)\n                                             :cljs (or-undefined v)))\n                (set-obj o (camel-case (kw->str k)) v))))\n     #?(:clj (list* o)\n        :cljs o))))\n\n\n(comment\n  (-dom-props {:asdf \"jkl\" :style 'foo})\n\n  (-dom-props {:style [\"fs1\"]})\n  )\n\n(defmacro dom-props [m]\n  (-dom-props m))\n\n\n(defn -props\n  ([m] #?(:clj (if-let [spread-sym (cond\n                                     (contains? m '&) '&\n                                     (contains? m :&) :&)]\n                 `(merge-obj ~(-props (dissoc m spread-sym) (primitive-obj))\n                             (-props ~(get m spread-sym)))\n                 (-props m (primitive-obj)))\n          :cljs (if (map? m)\n                  (-props m (primitive-obj))\n                  m)))\n  ([m o]\n   (if (seq m)\n     (recur (rest m)\n            (let [entry (first m)]\n              (set-obj o (kw->str (key entry)) (val entry))))\n     #?(:clj (list* o)\n        :cljs o))))\n\n(comment\n  (-props {:foo-bar \"baz\"})\n  )\n\n(defmacro props [m]\n  (-props m))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["helix.impl.props/aria-data-css-custom-prop-special-case-re","helix.impl.props/camel-regexp","js/RegExp","helix.impl.props/camel-case","s","cljs.core/Keyword","cljs.core/Symbol","name-str","cljs.core/name","cljs.core._EQ_","p1__34814#","p2__34813#","helix.impl.props/kw->str","kw","kw-ns","cljs.core/namespace","kw-name","helix.impl.props/set-obj","o","k","v","G__34816","helix.impl.props.goog$module$goog$object.set","helix.impl.props/->js","x","cljs.core.clj__GT_js","cljs.core.comp","var_args","G__34819","helix.impl.props/primitive-obj","js/Error","m","helix.impl.props.primitive_obj","cljs.core/seq","cljs.core/rest","entry","cljs.core/first","cljs.core/key","cljs.core/val","helix.impl.props/into-js-array","aseq","cljs.core.into_array","helix.impl.props/merge-obj","o1","o2","js/Object.assign","helix.impl.props/seq-to-class","class","cljs.core.remove","cljs.core/nil?","cljs.core.map","cljs.core/str","clojure.string.join","helix.impl.props/normalize-class","cljs.core/sequential?","helix.impl.props/or-undefined","js/undefined","helix.impl.props/dom-style","style","cljs.core/map?","cljs.core/vector?","p1__34822#","G__34826","helix.impl.props/-dom-props","helix.impl.props._dom_props","G__34831","G__34833","helix.impl.props/-props","helix.impl.props._props"]],"~:used-vars",["^D",["~$clojure.string/join","~$cljs.core/comp","~$cljs.core/rest","~$helix.impl.props/primitive-obj","~$cljs.core/str","~$cljs.core/sequential?","~$js/Object.assign","~$js/RegExp","~$js/undefined","~$cljs.core/vector?","~$cljs.core/=","~$helix.impl.props/seq-to-class","~$cljs.core/into-array","~$cljs.core/seq","~$cljs.core/Keyword","~$helix.impl.props/-dom-props","~$helix.impl.props/dom-style","~$helix.impl.props.goog$module$goog$object.set","~$helix.impl.props/or-undefined","~$cljs.core/map?","~$helix.impl.props/merge-obj","~$helix.impl.props/set-obj","~$helix.impl.props/->js","~$cljs.core/namespace","~$cljs.core/map","~$cljs.core/remove","~$helix.impl.props/aria-data-css-custom-prop-special-case-re","~$cljs.core/clj->js","~$helix.impl.props/camel-case","~$cljs.core/nil?","~$helix.impl.props/camel-regexp","~$cljs.core/key","~$helix.impl.props/into-js-array","~$helix.impl.props/-props","~$cljs.core/not","~$cljs.core/Symbol","~$cljs.core/first","~$cljs.core/name","~$helix.impl.props/normalize-class","~$cljs.core/val","~$js/Error","~$helix.impl.props/kw->str"]]],"~:cache-keys",["~#cmap",[["^1:","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^Z","~$goog.dom.HtmlElement"]]],["^1:","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1:","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2M","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^2N"]]],["^1:","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2M"]]],["^1:","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2K","^2N"]]],["^1:","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2M"]]],"~:SHADOW-TIMESTAMP",[1695154683000,1695154683000,1658925742000],["^1:","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2M","~$goog.reflect"]]],["^1:","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2M","~$goog.fs.blob","^2Q","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2S","^2T"]]],["^1:","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","cljs_bean/core.cljs"],["48253381fc2e9a7be115de76154157bad516ea85","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^Y","~$cljs-bean.from.cljs.core","^W"]]],["^1:","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2S","~$goog.html.SafeUrl","^2T","^2M","^2N"]]],["^1:","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2M","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2X","~$goog.html.SafeStyle","^2[","^2R","~$goog.html.uncheckedconversions","^2S","^2N"]]],["^1:","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","~$goog.dom.TagName","^2M","~$goog.dom.element"]]],["^1:","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2S","^2X","^34","~$goog.html.SafeStyleSheet","^2[","^36","^2R","^2T","^2M","~$goog.labs.userAgent.browser","~$goog.array","^W","^2N","~$goog.dom.tags","^2Y"]]],["^1:","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^W"]]],["^1:","helix/impl/props.cljc"],["a4f6bcd81594204f447b7d543a6ce5706413ce2b","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^Y","^T","^V","^W"]]],["^1:","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1:","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^3:","^2M","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1:","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2L"]]],["^1:","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",[]]],["^1:","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^3:","^W"]]],["^1:","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^Y","^3?","~$goog.string.StringBuffer"]]],["^1:","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","~$goog.dom.safe","^35","^2S","^2N"]]],["^1:","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2N","^2P"]]],["^1:","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","~$goog.flags"]]],["^1:","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^3=","^36"]]],["^1:","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2M","^33","^2X","^34","^38","^2[","^2R","^2S","^2N"]]],["^1:","cljs_bean/from/cljs/core.cljs"],["48253381fc2e9a7be115de76154157bad516ea85","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^Y"]]],["^1:","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z"]]],["^1:","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","~$goog.math.Long","~$goog.math.Integer","^3?","^W","^3:","~$goog.Uri","^3D"]]],["^1:","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2S","^2T","^2Y","^2M"]]],["^1:","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2S","^34","^2T","^W","^2M","^2N"]]],["^1:","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2V"]]],["^1:","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2M","^3?"]]],["^1:","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2F",["^ ","^2G",null,"^2H",["^D",[]],"^2I",["^Z","^2M","^2T"]]]]],"~:clj-info",["^ ","jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1629581068000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1629581068000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1629581068000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1629581068000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1629581068000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1629581068000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1658925742000,"jar:file:/Users/georgegatuma/.m2/repository/lilactown/helix/0.1.10/helix-0.1.10.jar!/helix/impl/props.cljc",1695155643000,"jar:file:/Users/georgegatuma/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1629581068000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","helix/impl/props.cljc","^7",1,"^8",5,"^9",1,"^:",21],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E",["^ ","^F",["^ ","^G",["^H",[["~$m"]]],"^7",195,"^8",1,"^6","helix/impl/props.cljc","^I","^J","^K","^L","^M",true],"^N",["^ ","^G",["^H",[["~$m"]]],"^7",169,"^8",1,"^6","helix/impl/props.cljc","^I","^O","^K","^L","^M",true]],"~:shadow/js-access-properties",["^D",["assign"]],"^I","^L","^P",["^ "],"^R",null,"^S",["^ ","^T","^T","^U","^T","^V","^V","~$b","^V","^W","^W","^X","^W","^Y","^Y","^Z","^Z"],"^[",["^D",["^10","^11"]],"~:shadow/js-access-global",["^D",["Object","RegExp","undefined","Error"]],"^12",null,"~:defs",["^ ","~$camel-regexp",["^ ","^5",["^ ","^6","helix/impl/props.cljc","^7",9,"^8",15,"^9",9,"^:",27],"^I","^28","^6","helix/impl/props.cljc","^:",27,"^8",10,"~:root-source-info",["^ ","~:source-type","~:fragment","~:source-form",["^H",["~$def","^4A",["^H",["^1M","-(\\w)","g"]]]]],"^7",9,"^9",9,"~:tag","~$js"],"~$kw->str",["^ ","~:protocol-inline",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",32,"^8",7,"^9",32,"^:",14,"^G",["^H",["~$quote",["^H",[["~$kw"]]]]]],"^I","^2C","^6","helix/impl/props.cljc","^:",14,"~:method-params",["^H",[["^4L"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^8",1,"^4B",["^ ","^4C","^4D","^4E",["^H",["~$defn","^4I",["^4L"],["^H",["~$let",["~$kw-ns",["^H",["~$namespace","^4L"]],"~$kw-name",["^H",["~$name","^4L"]]],["^H",["~$if",["^H",["~$nil?","^4R"]],"^4T",["^H",["~$str","^4R","/","^4T"]]]]]]]]],"~:variadic?",false,"^7",32,"~:ret-tag","^U","^9",32,"~:max-fixed-arity",1,"~:fn-var",true,"^G",["^H",["^4K",["^H",[["^4L"]]]]]],"~$aria-data-css-custom-prop-special-case-re",["^ ","^5",["^ ","^6","helix/impl/props.cljc","^7",7,"^8",6,"^9",7,"^:",47],"^I","^24","^6","helix/impl/props.cljc","^:",47,"^8",1,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4F","^51",["~#regexp",["~^(aria-|data-|--).*",0]]]]],"^7",7,"^9",7,"^4G","~$any"],"~$dom-style",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",122,"^8",7,"^9",122,"^:",16,"^G",["^H",["^4K",["^H",[["~$style"]]]]]],"^I","^1V","^6","helix/impl/props.cljc","^:",16,"^4M",["^H",[["^55"]]],"^4N",null,"^4O",["^H",[null,null]],"^8",1,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^54",["^55"],["^H",["~$cond",["^H",["~$map?","^55"]],["^H",["~$primitive-obj","^55"]],["^H",["~$vector?","^55"]],["^H",["~$into-js-array",["^H",["~$map",["^H",["~$fn*",["~$p1__34822#"],["^H",["^4V",["^H",["^57","^5="]],["^H",["^58","^5="]],"^5="]]]],"^55"]]]],true,"^55"]]]]],"^4Y",false,"^7",122,"^4Z",["^D",[null,"^53","~$array"]],"^9",122,"^4[",1,"^50",true,"^G",["^H",["^4K",["^H",[["^55"]]]]]],"~$-props",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",173,"^8",7,"^9",173,"^:",13,"^G",["^H",["^4K",["^H",[["~$m"],["~$m","~$o"]]]]],"~:top-fn",["^ ","^4Y",false,"~:fixed-arity",2,"^4[",2,"^4M",[["~$m"],["~$m","~$o"]],"^G",["^H",[["~$m"],["~$m","~$o"]]],"^4O",["^H",[null,null]]]],"^I","^2;","^6","helix/impl/props.cljc","^:",13,"^5@",["^ ","^4Y",false,"^5A",2,"^4[",2,"^4M",[["~$m"],["~$m","~$o"]],"^G",["^H",[["~$m"],["~$m","~$o"]]],"^4O",["^H",[null,null]]],"^4M",[["~$m"],["~$m","~$o"]],"^4N",null,"^5A",2,"^4O",["^H",[null,null]],"^8",1,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^5?",["^H",[["~$m"],["^H",["^4V",["^H",["^57","~$m"]],["^H",["^5?","~$m",["^H",["^58"]]]],"~$m"]]]],["^H",[["~$m","~$o"],["^H",["^4V",["^H",["~$seq","~$m"]],["^H",["~$recur",["^H",["~$rest","~$m"]],["^H",["^4Q",["~$entry",["^H",["~$first","~$m"]]],["^H",["~$set-obj","~$o",["^H",["^4I",["^H",["~$key","^5E"]]]],["^H",["~$val","^5E"]]]]]]]],"~$o"]]]]]]],"^4Y",false,"~:methods",[["^ ","^5A",1,"^4Y",false,"^4G",["^D",[null,"^53"]]],["^ ","^5A",2,"^4Y",false]],"^7",173,"^9",173,"^4[",2,"^50",true,"^G",["^H",[["~$m"],["~$m","~$o"]]]],"~$normalize-class",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",103,"^8",10,"^9",103,"^:",25,"^G",["^H",["^4K",["^H",[["~$class"]]]]]],"^I","^2@","^6","helix/impl/props.cljc","^:",25,"^4M",["^H",[["^5L"]]],"^4N",null,"^4O",["^H",[null,null]],"^8",4,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^5K",["^5L"],["^H",["^56",["^H",["~$string?","^5L"]],"^5L",["^H",["~$sequential?","^5L"]],["^H",["~$seq-to-class","^5L"]],true,["^H",["^4X","^5L"]]]]]]],"^4Y",false,"^7",103,"^4Z","^U","^9",103,"^4[",1,"^50",true,"^G",["^H",["^4K",["^H",[["^5L"]]]]]],"~$merge-obj",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",72,"^8",10,"^9",72,"^:",19,"^G",["^H",["^4K",["^H",[["~$o1","~$o2"]]]]]],"^I","^1Z","^6","helix/impl/props.cljc","^:",19,"^4M",["^H",[["^5Q","^5R"]]],"^4N",null,"^4O",["^H",[null,null]],"^8",4,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^5P",["^5Q","^5R"],["^H",["^1L","^5Q","^5R"]]]]],"^4Y",false,"^7",72,"^4Z","^4H","^9",72,"^4[",2,"^50",true,"^G",["^H",["^4K",["^H",[["^5Q","^5R"]]]]]],"^58",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",47,"^8",7,"^9",47,"^:",20,"^G",["^H",["^4K",["^H",[[],["~$m"],["~$m","~$o"]]]]],"^5@",["^ ","^4Y",false,"^5A",2,"^4[",2,"^4M",[[],["~$m"],["~$m","~$o"]],"^G",["^H",[[],["~$m"],["~$m","~$o"]]],"^4O",["^H",[null,null,null]]]],"^I","^1I","^6","helix/impl/props.cljc","^:",20,"^5@",["^ ","^4Y",false,"^5A",2,"^4[",2,"^4M",[[],["~$m"],["~$m","~$o"]],"^G",["^H",[[],["~$m"],["~$m","~$o"]]],"^4O",["^H",[null,null,null]]],"^4M",[[],["~$m"],["~$m","~$o"]],"^4N",null,"^5A",2,"^4O",["^H",[null,null,null]],"^8",1,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^58",["^H",[[],["~#js-value",["^ "]]]],["^H",[["~$m"],["^H",["^58","~$m",["^H",["^58"]]]]]],["^H",[["~$m","~$o"],["^H",["^4V",["^H",["^5B","~$m"]],["^H",["^5C",["^H",["^5D","~$m"]],["^H",["^4Q",["^5E",["^H",["^5F","~$m"]]],["^H",["^5G","~$o",["^H",["~$camel-case",["^H",["^4I",["^H",["^5H","^5E"]]]]]],["^H",["~$->js",["^H",["^5I","^5E"]]]]]]]]]],"~$o"]]]]]]],"^4Y",false,"^5J",[["^ ","^5A",0,"^4Y",false,"^4G","~$object"],["^ ","^5A",1,"^4Y",false,"^4G","^53"],["^ ","^5A",2,"^4Y",false]],"^7",47,"^9",47,"^4[",2,"^50",true,"^G",["^H",[[],["~$m"],["~$m","~$o"]]]],"^5O",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",75,"^8",7,"^9",75,"^:",19,"^G",["^H",["^4K",["^H",[["^5L"]]]]]],"^I","^1Q","^6","helix/impl/props.cljc","^:",19,"^4M",["^H",[["^5L"]]],"^4N",null,"^4O",["^H",[null,null]],"^8",1,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^5O",["^5L"],["^H",["~$->>","^5L",["^H",["~$remove","^4W"]],["^H",["^5;","^4X"]],["^H",["~$string/join"," "]]]]]]],"^4Y",false,"^7",75,"^4Z","^U","^9",75,"^4[",1,"^50",true,"^G",["^H",["^4K",["^H",[["^5L"]]]]]],"^5G",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",40,"^8",7,"^9",40,"^:",14,"^G",["^H",["^4K",["^H",[["~$o","~$k","~$v"]]]]]],"^I","^1[","^6","helix/impl/props.cljc","^:",14,"^4M",["^H",[["~$o","~$k","~$v"]]],"^4N",null,"^4O",["^H",[null,null]],"^8",1,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^5G",["~$o","~$k","~$v"],["^H",["~$doto","~$o",["^H",["~$gobj/set","~$k","~$v"]]]]]]],"^4Y",false,"^7",40,"^9",40,"^4[",3,"^50",true,"^G",["^H",["^4K",["^H",[["~$o","~$k","~$v"]]]]]],"^5:",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",67,"^8",7,"^9",67,"^:",20,"^G",["^H",["^4K",["^H",[["~$aseq"]]]]]],"^I","^2:","^6","helix/impl/props.cljc","^:",20,"^4M",["^H",[["^60"]]],"^4N",null,"^4O",["^H",[null,null]],"^8",1,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^5:",["^60"],["^H",["~$into-array","^60"]]]]],"^4Y",false,"^7",67,"^4Z","^5>","^9",67,"^4[",1,"^50",true,"^G",["^H",["^4K",["^H",[["^60"]]]]]],"^5T",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",11,"^8",7,"^9",11,"^:",17,"^G",["^H",["^4K",["^H",[["~$s"]]]]],"~:doc","Returns camel case version of the string, e.g. \"http-equiv\" becomes \"httpEquiv\"."],"^I","^26","^6","helix/impl/props.cljc","^:",17,"^4M",["^H",[["~$s"]]],"^4N",null,"^4O",["^H",[null,null]],"^8",1,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^5T","Returns camel case version of the string, e.g. \"http-equiv\" becomes \"httpEquiv\".",["~$s"],["^H",["^4V",["^H",["~$or",["^H",["~$keyword?","~$s"]],["^H",["^5M","~$s"]],["^H",["~$symbol?","~$s"]]]],["^H",["^4Q",["~$name-str",["^H",["^4U","~$s"]]],["^H",["^56",["^H",["~$some?",["^H",["~$.match","^66","^51"]]]],"^66",["^H",["~$=",["^H",["~$.substring","^66",0,1]],"'"]],["^H",["^69","^66",1]],"~:else",["^H",["~$.replace","^66","^4A",["^H",["^5<",["~$p1__34814#","~$p2__34813#"],["^H",["~$.toUpperCase","^6="]]]]]]]]]],"~$s"]]]]],"^4Y",false,"^7",11,"^4Z",["^D",[null,"^53","^U"]],"^9",11,"^4[",1,"^50",true,"^G",["^H",["^4K",["^H",[["~$s"]]]]],"^62","Returns camel case version of the string, e.g. \"http-equiv\" becomes \"httpEquiv\"."],"~$-dom-props",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",135,"^8",7,"^9",135,"^:",17,"^G",["^H",["^4K",["^H",[["~$m"],["~$m","~$o"]]]]],"^5@",["^ ","^4Y",false,"^5A",2,"^4[",2,"^4M",[["~$m"],["~$m","~$o"]],"^G",["^H",[["~$m"],["~$m","~$o"]]],"^4O",["^H",[null,null]]]],"^I","^1U","^6","helix/impl/props.cljc","^:",17,"^5@",["^ ","^4Y",false,"^5A",2,"^4[",2,"^4M",[["~$m"],["~$m","~$o"]],"^G",["^H",[["~$m"],["~$m","~$o"]]],"^4O",["^H",[null,null]]],"^4M",[["~$m"],["~$m","~$o"]],"^4N",null,"^5A",2,"^4O",["^H",[null,null]],"^8",1,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^6?",["^H",[["~$m"],["^H",["^4V",["^H",["^57","~$m"]],["^H",["^6?","~$m",["^H",["^58"]]]],"~$m"]]]],["^H",[["~$m","~$o"],["^H",["^4V",["^H",["^5B","~$m"]],["^H",["^5C",["^H",["^5D","~$m"]],["^H",["^4Q",["^5E",["^H",["^5F","~$m"]],"~$k",["^H",["^5H","^5E"]],"~$v",["^H",["^5I","^5E"]]],["^H",["~$case","~$k","~:class",["^H",["^5G","~$o","className",["^H",["^5K","~$v"]]]],"~:for",["^H",["^5G","~$o","htmlFor","~$v"]],"~:style",["^H",["^5G","~$o","style",["^H",["^54","~$v"]]]],"~:value",["^H",["^5G","~$o","value",["^H",["~$or-undefined","~$v"]]]],["^H",["^5G","~$o",["^H",["^5T",["^H",["^4I","~$k"]]]],"~$v"]]]]]]]],"~$o"]]]]]]],"^4Y",false,"^5J",[["^ ","^5A",1,"^4Y",false,"^4G",["^D",[null,"^53"]]],["^ ","^5A",2,"^4Y",false]],"^7",135,"^9",135,"^4[",2,"^50",true,"^G",["^H",[["~$m"],["~$m","~$o"]]]],"^6E",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",115,"^8",10,"^9",115,"^:",22,"^G",["^H",["^4K",["^H",[["~$v"]]]]]],"^I","^1X","^6","helix/impl/props.cljc","^:",22,"^4M",["^H",[["~$v"]]],"^4N",null,"^4O",["^H",[null,null]],"^8",4,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^6E",["~$v"],["^H",["^4V",["^H",["^4W","~$v"]],"^1N","~$v"]]]]],"^4Y",false,"^7",115,"^4Z",["^D",[null,"^4H"]],"^9",115,"^4[",1,"^50",true,"^G",["^H",["^4K",["^H",[["~$v"]]]]]],"^5U",["^ ","^4J",null,"^5",["^ ","^6","helix/impl/props.cljc","^7",44,"^8",16,"^9",44,"^:",20,"^G",["^H",["^4K",["^H",[["~$x"]]]]]],"^I","^20","^6","helix/impl/props.cljc","^:",20,"^4M",["^H",[["~$x"]]],"^4N",null,"^4O",["^H",[null,null]],"^8",10,"^4B",["^ ","^4C","^4D","^4E",["^H",["^4P","^5U",["~$x"],["^H",["~$clj->js","~$x","~:keyword-fn",["^H",["~$comp","^5T","^4U"]]]]]]],"^4Y",false,"^7",44,"^4Z","^53","^9",44,"^4[",1,"^50",true,"^G",["^H",["^4K",["^H",[["~$x"]]]]]]],"^11",["^ ","^L","^L","^Y","^Y"],"~:cljs.analyzer/constants",["^ ","^[",["^D",["^6:","^6G"]],"~:order",["^6:","^6G"]],"^16",["^ ","^10",["^D",[]],"^11",["^D",[]]],"^17",["^ "],"^18",["^Z","^Y","^T","^V","^W"]],"^K","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^2E",[["^6M","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^6M","~:shadow-tweaks"],null,["^6M","~:source-map-inline"],null,["^6M","~:elide-asserts"],false,["^6M","~:optimize-constants"],null,["^6M","^1="],null,["^6M","~:external-config"],null,["^6M","~:tooling-config"],null,["^6M","~:emit-constants"],null,["^6M","~:load-tests"],null,["^6M","~:form-size-threshold"],null,["^6M","~:global-goog-object&array"],null,["^6M","~:data-readers"],null,["^6M","~:infer-externs"],"~:auto",["^6M","^1?"],null,["^6O","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6M","~:fn-invoke-direct"],null,["^6M","~:source-map"],"/dev/null"]]]