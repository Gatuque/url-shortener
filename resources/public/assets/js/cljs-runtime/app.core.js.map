{"version":3,"sources":["app/core.cljs"],"mappings":";;AAQE,AAAA;AAAA,eAAA,iBAAAA,WAAA,8BAAAC,qBAAAC,9FAAOK;AAAP,AAAA,IAAAJ,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAAM,aAAwB,sBAAA,2CAAA,kDAAA,nHAACI;YAAzB,AAAAH,4CAAAD,WAAA,IAAA,nEAAOE;gBAAP,AAAAD,4CAAAD,WAAA,IAAA,vEAAaG;IACPE,YAAU;AAAA,AACE,OAAAC,wBAAA,AAAAC,2BAAA,MAAA,WAAAC;AAAA,AAAA,OAAAF,wBAAA,AAAAC,yiBAAA,WAAQE,zhBAAU,MAAA,NAACC,uBAA0B,qBAAA,2CAAA,uDAAA,OAAA,2DAAA,2CAAA,qEAAA,2BAAA,pUAACC,0XAEc,eAAA,fAACC,wBAA4B,AAAA,gFAAMV;AAF/F,AAAA,OAAAI,wBAAA,AAAAC,6CAAA,WAGQM,7BAAS,AAAOJ;AAHxB,AAAA,OAAAH,wBAAA,AAAAC,uOAAA,WAIQO,vNAAK,qHAAA,2EAAA,hMAACC,0DAAQF;AAJtB,AAAA,OAAAN,2BAKE,iBAAAS,WAAWG;IAAXF,WAAA;IAAAC,WAAuB,AAAA,4FAAYJ;AAAnC,AAAA,0FAAAE,SAAAC,SAAAC,gCAAAF,SAAAC,SAAAC,tJAACf,0CAAAA,sEAAAA;;;;;;;IACfiB,gBAAc,8DAAA,2IAAA,5JAAK,AAAUC,iEAAiB,AAAA,mFAAOnB;AAR3D,AA2JC,OAAA,AAAA4B,qCAAA,MAAA,iBAAAC,WAAA,EAAA,YAAA;AAAA,AAAAA;KAhJE,kBAAI,AAAA,mFAAO7B,sIAEIkB,9EA8IjB,AAAA,AAAAU,qCAAA,IAAA,iBAAAE,WAAA,EAAA,vHAKA,AAAA,AAAAF,qCAAA,MAAA;AALA,AAAAE;KA9IgCZ,iLAEV,AAAA,gFAAMlB,jMA4I5B,AAAA,AAAA4B,qCAAA,QAAA,iBAAAG,WAAA,EAAA,QAAA,AAAAC,sHAAA,WAAA,WAAAT,/QAKA,AAAA,AAAAK,qCAAA,MAAA;AAhJ2B,IAAAR,WAAWH,fA2ItC;IA3I2BI,WAAA;IAAAC,WAAsB,AAAA,AAAAC;AAAtB,AAAA,0FAAAH,SAAAC,SAAAC,gCAAAF,SAAAC,SAAAC,tJAACrB,0CAAAA,sEAAAA;GA2I5B,YAAA,4CAAA,cAAA;AAAA,AAAA8B;MAAA,AAAA,AAAAH,qCAAA,SAAA,iBAAAK,WAAA,EAAA,UAAA;AAxI2B,OAAC9B,PAwI5B;GAAA,YAAA;AAAA,AAAA8B;KAAA;;AA5JH,AAAA,GAAA,AAAAtC;AAAA,IAAAC,WAAAN;AAAA,AAAA,CAAA,AAAAM,uBAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOO,AAyBT,gBAAA,hBAAe2B;AAAf,AACE,IAAMC,OAAK,AAACC,gDAAgB,wBAAA,xBAACC;AAA7B,AACE,OAASF,iDAAQ5B,rCAsBR,AAAA,AAAA+B,kDAAA","names":["G__40912","props__31323__auto__","maybe-ref__31324__auto__","vec__40913","helix.core/extract-cljs-props","goog/DEBUG","G__40933","app.core/app","vec__40916","cljs.core.nth","state","set-state","helix.hooks/use-state","fetch-url","promesa.protocols/-mcat","promesa.protocols/-promise","___33536__auto__","_response","js/fetch","cljs.core/clj->js","js/JSON.stringify","response","data","cljs.core.js__GT_clj","G__40919","G__40920","G__40921","cljs.core/assoc","redirect-link","js/location","G__40928","G__40929","G__40930","p1__40910#","app.core/init","root","js/module$node_modules$react_dom$client.createRoot","js/document.getElementById","helix.core/get-react","obj40923","obj40925","obj40927","helix.impl.props/or-undefined","obj40932"],"sourcesContent":["(ns app.core\n  (:require [helix.core :refer [defnc $]]\n            [helix.hooks :as hooks]\n            [helix.dom :as d]\n            [\"react-dom/client\" :as rdom]\n            [promesa.core :as p]))\n  \n\n  (defnc app []\n    (let [[state set-state] (hooks/use-state {:url nil})\n          fetch-url (fn []\n                      (p/let [_response (js/fetch \"/api/redirect/\" (clj->js {:method \"POST\"\n                                                                            :headers {:Content-Type \"application/json\"}\n                                                                            :body (js/JSON.stringify #js {:url (:url state)})}))\n                              response (.json _response)\n                              data (js->clj response :keywordize-keys true)]\n                        (set-state assoc :slug (:short-url data))))\n          redirect-link (str (.-origin js/location) \"/\" (:slug state) \"/\")]\n      (d/div {:class-name \"bg-blue-100 grid place-items-center h-screen\"}\n        ;; create elements out of components \n       (if (:slug state)\n         (d/div \n          (d/a {:href redirect-link} redirect-link ))\n         (d/div \n          (d/input {:value (:url state)\n                    :on-change #(set-state assoc :url (.. % -target -value))\n                    :class-name \"form-control border-solid border-gray-600\"\n                    :place-holder \"Enter URL\"})\n          (d/button {:on-click #(fetch-url)\n                     :class-name \"border-2 rounded  px-4 uppercase\"}\n                    \"Shorten Url\"))))))\n  \n\n(defn ^:export init []\n  (let [root (rdom/createRoot (js/document.getElementById \"app\"))]\n    (.render root ($ app))))\n"]}